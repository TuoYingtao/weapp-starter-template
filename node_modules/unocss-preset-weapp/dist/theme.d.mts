export { colors } from './colors.mjs';
export { t as theme } from './shared/unocss-preset-weapp.c4d56a7a.mjs';
import { a as Theme } from './shared/unocss-preset-weapp.4492eb27.mjs';
export { C as Colors, T as ThemeAnimation } from './shared/unocss-preset-weapp.4492eb27.mjs';
import '@unocss/core';

declare const blur: {
    DEFAULT: string;
    '0': string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    '2xl': string;
    '3xl': string;
};
declare const dropShadow: {
    DEFAULT: string[];
    sm: string;
    md: string[];
    lg: string[];
    xl: string[];
    '2xl': string;
    none: string;
};

declare const fontFamily: {
    sans: string;
    serif: string;
    mono: string;
};
declare const fontSize: Theme['fontSize'];
declare const textIndent: Theme['textIndent'];
declare const textStrokeWidth: Theme['textStrokeWidth'];
declare const textShadow: Theme['textShadow'];
declare const lineHeight: Theme['lineHeight'];
declare const letterSpacing: Theme['letterSpacing'];
declare const fontWeight: {
    thin: string;
    extralight: string;
    light: string;
    normal: string;
    medium: string;
    semibold: string;
    bold: string;
    extrabold: string;
    black: string;
};
declare const wordSpacing: Theme['wordSpacing'];

declare const breakpoints: {
    sm: string;
    md: string;
    lg: string;
    xl: string;
    '2xl': string;
};
declare const verticalBreakpoints: {
    sm: string;
    md: string;
    lg: string;
    xl: string;
    '2xl': string;
};
declare const lineWidth: {
    DEFAULT: string;
    none: string;
};
declare const spacing: {
    DEFAULT: string;
    none: string;
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    '2xl': string;
    '3xl': string;
    '4xl': string;
    '5xl': string;
    '6xl': string;
    '7xl': string;
    '8xl': string;
};
declare const duration: {
    DEFAULT: string;
    none: string;
    75: string;
    100: string;
    150: string;
    200: string;
    300: string;
    500: string;
    700: string;
    1000: string;
};
declare const borderRadius: {
    DEFAULT: string;
    none: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    half: string;
    '2xl': string;
    '3xl': string;
    full: string;
};
declare const boxShadow: {
    DEFAULT: string[];
    none: string;
    sm: string;
    md: string[];
    lg: string[];
    xl: string[];
    '2xl': string;
    inner: string;
};
declare const easing: {
    DEFAULT: string;
    linear: string;
    in: string;
    out: string;
    'in-out': string;
};
declare const ringWidth: {
    DEFAULT: string;
    none: string;
};
declare const zIndex: {
    auto: string;
};
declare const media: {
    mouse: string;
};

declare const baseSize: {
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    '2xl': string;
    '3xl': string;
    '4xl': string;
    '5xl': string;
    '6xl': string;
    '7xl': string;
    '8xl': string;
    '9xl': string;
    full: string;
    half: string;
};
declare const width: {
    screen: string;
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    '2xl': string;
    '3xl': string;
    '4xl': string;
    '5xl': string;
    '6xl': string;
    '7xl': string;
    '8xl': string;
    '9xl': string;
    full: string;
    half: string;
    auto: string;
};
declare const maxWidth: {
    screen: string;
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    '2xl': string;
    '3xl': string;
    '4xl': string;
    '5xl': string;
    '6xl': string;
    '7xl': string;
    '8xl': string;
    '9xl': string;
    full: string;
    half: string;
    none: string;
};
declare const height: {
    screen: string;
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    '2xl': string;
    '3xl': string;
    '4xl': string;
    '5xl': string;
    '6xl': string;
    '7xl': string;
    '8xl': string;
    '9xl': string;
    full: string;
    half: string;
    auto: string;
};
declare const maxHeight: {
    screen: string;
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    '2xl': string;
    '3xl': string;
    '4xl': string;
    '5xl': string;
    '6xl': string;
    '7xl': string;
    '8xl': string;
    '9xl': string;
    full: string;
    half: string;
    none: string;
};
declare const containers: {
    [k: string]: string;
};

declare const preflightBase: {
    '--un-backdrop-blur': string;
    '--un-backdrop-brightness': string;
    '--un-backdrop-contrast': string;
    '--un-backdrop-grayscale': string;
    '--un-backdrop-hue-rotate': string;
    '--un-backdrop-invert': string;
    '--un-backdrop-opacity': string;
    '--un-backdrop-saturate': string;
    '--un-backdrop-sepia': string;
    '--un-blur': string;
    '--un-brightness': string;
    '--un-contrast': string;
    '--un-drop-shadow': string;
    '--un-grayscale': string;
    '--un-hue-rotate': string;
    '--un-invert': string;
    '--un-saturate': string;
    '--un-sepia': string;
    '--un-ring-inset': string;
    '--un-ring-offset-width': string;
    '--un-ring-offset-color': string;
    '--un-ring-width': string;
    '--un-ring-color': string;
    '--un-shadow': string;
    '--un-ring-offset-shadow': string;
    '--un-ring-shadow': string;
    '--un-shadow-inset': string;
    '--un-rotate': number;
    '--un-rotate-x': number;
    '--un-rotate-y': number;
    '--un-rotate-z': number;
    '--un-scale-x': number;
    '--un-scale-y': number;
    '--un-scale-z': number;
    '--un-skew-x': number;
    '--un-skew-y': number;
    '--un-translate-x': number;
    '--un-translate-y': number;
    '--un-translate-z': number;
};

declare const animation: {
    keyframes: {
        pulse: string;
        bounce: string;
        spin: string;
        ping: string;
        'bounce-alt': string;
        flash: string;
        'pulse-alt': string;
        'pulse-bck': string;
        'pulse-fwd': string;
        'rubber-band': string;
        'shake-x': string;
        'shake-y': string;
        'head-shake': string;
        swing: string;
        tada: string;
        wobble: string;
        jello: string;
        'heart-beat': string;
        hinge: string;
        'jack-in-the-box': string;
        'light-speed-in-left': string;
        'light-speed-in-right': string;
        'light-speed-out-left': string;
        'light-speed-out-right': string;
        flip: string;
        'flip-in-x': string;
        'flip-in-y': string;
        'flip-out-x': string;
        'flip-out-y': string;
        'rotate-in': string;
        'rotate-in-down-left': string;
        'rotate-in-down-right': string;
        'rotate-in-up-left': string;
        'rotate-in-up-right': string;
        'rotate-out': string;
        'rotate-out-down-left': string;
        'rotate-out-down-right': string;
        'rotate-out-up-left': string;
        'rotate-out-up-right': string;
        'roll-in': string;
        'roll-out': string;
        'zoom-in': string;
        'zoom-in-down': string;
        'zoom-in-left': string;
        'zoom-in-right': string;
        'zoom-in-up': string;
        'zoom-out': string;
        'zoom-out-down': string;
        'zoom-out-left': string;
        'zoom-out-right': string;
        'zoom-out-up': string;
        'bounce-in': string;
        'bounce-in-down': string;
        'bounce-in-left': string;
        'bounce-in-right': string;
        'bounce-in-up': string;
        'bounce-out': string;
        'bounce-out-down': string;
        'bounce-out-left': string;
        'bounce-out-right': string;
        'bounce-out-up': string;
        'slide-in-down': string;
        'slide-in-left': string;
        'slide-in-right': string;
        'slide-in-up': string;
        'slide-out-down': string;
        'slide-out-left': string;
        'slide-out-right': string;
        'slide-out-up': string;
        'fade-in': string;
        'fade-in-down': string;
        'fade-in-down-big': string;
        'fade-in-left': string;
        'fade-in-left-big': string;
        'fade-in-right': string;
        'fade-in-right-big': string;
        'fade-in-up': string;
        'fade-in-up-big': string;
        'fade-in-top-left': string;
        'fade-in-top-right': string;
        'fade-in-bottom-left': string;
        'fade-in-bottom-right': string;
        'fade-out': string;
        'fade-out-down': string;
        'fade-out-down-big': string;
        'fade-out-left': string;
        'fade-out-left-big': string;
        'fade-out-right': string;
        'fade-out-right-big': string;
        'fade-out-up': string;
        'fade-out-up-big': string;
        'fade-out-top-left': string;
        'fade-out-top-right': string;
        'fade-out-bottom-left': string;
        'fade-out-bottom-right': string;
        'back-in-up': string;
        'back-in-down': string;
        'back-in-right': string;
        'back-in-left': string;
        'back-out-up': string;
        'back-out-down': string;
        'back-out-right': string;
        'back-out-left': string;
    };
    durations: {
        pulse: string;
        'pulse-bck': string;
        'pulse-fwd': string;
        'heart-beat': string;
        'bounce-in': string;
        'bounce-out': string;
        'flip-out-x': string;
        'flip-out-y': string;
        hinge: string;
    };
    timingFns: {
        pulse: string;
        'pulse-bck': string;
        'pulse-fwd': string;
        ping: string;
        'head-shake': string;
        'heart-beat': string;
        'pulse-alt': string;
        'light-speed-in-left': string;
        'light-speed-in-right': string;
        'light-speed-out-left': string;
        'light-speed-out-right': string;
    };
    properties: {
        'bounce-alt': {
            'transform-origin': string;
        };
        jello: {
            'transform-origin': string;
        };
        swing: {
            'transform-origin': string;
        };
        flip: {
            'backface-visibility': string;
        };
        'flip-in-x': {
            'backface-visibility': string;
        };
        'flip-in-y': {
            'backface-visibility': string;
        };
        'flip-out-x': {
            'backface-visibility': string;
        };
        'flip-out-y': {
            'backface-visibility': string;
        };
        'rotate-in': {
            'transform-origin': string;
        };
        'rotate-in-down-left': {
            'transform-origin': string;
        };
        'rotate-in-down-right': {
            'transform-origin': string;
        };
        'rotate-in-up-left': {
            'transform-origin': string;
        };
        'rotate-in-up-right': {
            'transform-origin': string;
        };
        'rotate-out': {
            'transform-origin': string;
        };
        'rotate-out-down-left': {
            'transform-origin': string;
        };
        'rotate-out-down-right': {
            'transform-origin': string;
        };
        'rotate-out-up-left': {
            'transform-origin': string;
        };
        'rotate-out-up-right': {
            'transform-origin': string;
        };
        hinge: {
            'transform-origin': string;
        };
        'zoom-out-down': {
            'transform-origin': string;
        };
        'zoom-out-left': {
            'transform-origin': string;
        };
        'zoom-out-right': {
            'transform-origin': string;
        };
        'zoom-out-up': {
            'transform-origin': string;
        };
    };
    counts: {
        spin: string;
        ping: string;
        pulse: string;
        'pulse-alt': string;
        'pulse-bck': string;
        'pulse-fwd': string;
        bounce: string;
        'bounce-alt': string;
    };
};

export { Theme, animation, baseSize, blur, borderRadius, boxShadow, breakpoints, containers, dropShadow, duration, easing, fontFamily, fontSize, fontWeight, height, letterSpacing, lineHeight, lineWidth, maxHeight, maxWidth, media, preflightBase, ringWidth, spacing, textIndent, textShadow, textStrokeWidth, verticalBreakpoints, width, wordSpacing, zIndex };
