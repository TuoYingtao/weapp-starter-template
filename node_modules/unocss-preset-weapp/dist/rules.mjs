export { u as alignments, a as animations, c as appearance, E as aspectRatio, b as backgroundStyles, g as bgColors, d as borderStyles, e as borders, C as boxSizing, i as colorScheme, T as containerParent, Q as cssProperty, P as cssVariables, j as divides, k as flex, y as flexGridJustifiesAlignments, A as floats, K as fonts, l as gaps, m as grids, h as handlerBorderStyle, z as insets, q as justifies, U as lineClamps, G as margins, f as opacity, s as orders, o as outline, n as overflows, F as paddings, x as placements, p as positions, r as rules, S as safeArea, D as sizes, H as spaces, I as svgUtilities, L as tabSizes, t as textAligns, R as textDecorations, M as textIndents, O as textShadows, N as textStrokes, J as transitions, v as verticalAligns, w as willChange, B as zIndexes } from './shared/unocss-preset-weapp.8575f0b4.mjs';
export { e as appearances, H as backdropFilterBase, B as backgroundBlendModes, c as boxShadows, b as boxShadowsBase, k as breaks, g as contains, i as contentVisibility, j as contents, f as cursors, d as displays, D as dynamicViewportHeight, G as filterBase, I as filters, o as fontSmoothings, n as fontStyles, q as hyphens, z as isolations, C as mixBlendModes, A as objectPositions, p as pointerEvents, h as resizes, r as ringBase, a as rings, y as screenReadersAccess, l as textOverflows, m as textTransforms, t as textWraps, E as transformBase, F as transforms, u as userSelects, v as varEmpty, w as whitespaces, s as writingModes, x as writingOrientations } from './shared/unocss-preset-weapp.d6fdd275.mjs';
import './shared/unocss-preset-weapp.081deb7c.mjs';
import '@unocss/core';
import 'unplugin-transform-class/utils';
import '@unocss/rule-utils';

const questionMark = [
  [
    /^(where|\?)$/,
    (_, { constructCSS, generator }) => {
      if (generator.userConfig.envMode === "dev")
        return `@keyframes __un_qm{0%{box-shadow:inset 4px 4px #ff1e90, inset -4px -4px #ff1e90}100%{box-shadow:inset 8px 8px #3399ff, inset -8px -8px #3399ff}}
${constructCSS({ animation: "__un_qm 0.5s ease-in-out alternate infinite" })}`;
    }
  ]
];

export { questionMark };
